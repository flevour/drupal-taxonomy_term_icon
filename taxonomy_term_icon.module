<?php

/**
 * Implementation of hook_form_FORM_ID_alter().
 *
 * Modifica il form di modifica di un termine per aggiungere menu a tendina con scelta categoria.
 */
function taxonomy_term_icon_form_taxonomy_form_term_alter(&$form, &$form_state) {
  $term = $form['#term'];
  $vocabulary = $form['#vocabulary'];
  // Attiviamo l'alter solo per vocabolari specifici e per termini di primo livello o in fase di creazione.
  if (in_array($vocabulary['vid'], variable_get('taxonomy_term_icon_vids', array())) && (empty($term['parent']) || !$term['tid'])) {
    $icon = taxonomy_term_icon_by_tid($term['tid']);
    $form['icon'] = array(
      '#title' => t('Select icon'),
      '#type' => 'select',
      '#options' => array( // Questo array contiene come chiavi le classi da assegnare, come valori l'html necessario a far visualizzare l'icona
        'foo' => 'bar',
        'foo1' => 'bar1',
      ),
      '#default_value' => $icon->icon,
    );
    $form['submit']['#weight'] = 1;
    $form['delete']['#weight'] = 1;
  }
}

/**
 * Implementazione dell'hook_taxonomy.
 *
 * Gestisce la tabella di dati aggiuntivi relativi ai term.
 *
 * @internal anche in fase di salvataggio di nuovo termine $array['tid'] e' valorizzato correttamente.
 */
function taxonomy_term_icon_taxonomy($op, $type, $array = NULL) {
  if ($type == 'term') {
    switch ($op) {
      case 'insert':
      case 'update':
        $primary_key = ($op == 'update') ? 'tid' : null;
        $data = array_intersect_key($array, array('tid' => null, 'icon' => null)); // estrae i valori per tid e icon da $values
        drupal_write_record('term_icon', $data, $primary_key);
        break;
      case 'delete':
        db_query('DELETE FROM {term_icon} WHERE tid = %d', $array['tid']);
        break;
    }
  }
}

/**
 * Helper che recupera una mappa di conversion da tid a icona.
 *
 * @return array mappa array in cui le chiavi sono i tid e il valore corrispondente e' la classe relativa all'icona.
 */
function taxonomy_term_icon_map() {
  $return = array();
  // Esempio di query piu' complessa anche se non pertinente $query = "SELECT t.tid, t.* FROM {term_data} t INNER JOIN {term_hierarchy} h ON h.parent = t.tid WHERE h.tid = %d ORDER BY weight, name"
  $query = "SELECT ti.* FROM {term_icon} ti";
  $result = db_query($query);
  while ($row = db_fetch_object($result)) {
    $return[$row->tid] = $row->icon;
  }
  return $return;
}

/**
 * Recupera una riga della tabella term_icon utilizzando un term id
 *
 * @param int $tid  id del termine di cui recuperare l'icona
 * @return stdClass istanza di stdClass contenente proprieta' tid/icon
 */
function taxonomy_term_icon_by_tid($tid) {
  return db_fetch_object(db_query("SELECT ti.* FROM {term_icon} ti WHERE ti.tid = %d", $tid));
}
